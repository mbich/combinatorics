% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combinatorics.design.set.R
\docType{methods}
\name{combinatorics.set.limit}
\alias{combinatorics.set.limit}
\alias{combinatorics.set.limit,Combinatorics,character,numeric-method}
\alias{combinatorics.set.limit,Combinatorics,numeric,numeric-method}
\title{Set limit in model}
\usage{
combinatorics.set.limit(model, parameter, value)

\S4method{combinatorics.set.limit}{Combinatorics,character,numeric}(model,
  parameter, value)

\S4method{combinatorics.set.limit}{Combinatorics,numeric,numeric}(model,
  parameter, value)
}
\arguments{
\item{model}{объект класса \code{"Combinatorics"}, содержащий комбинаторную модель}

\item{parameter}{объект класса \code{"character"} или \code{"numeric"}, содержащий
наименование показателя или индекс показателя в списке показателей}

\item{value}{объект класса \code{"numeric"}, содержащий значение огранченного ресурса.}
}
\value{
возвращает объект класса \code{"Combinatorics"} с внесёнными изменениями
}
\description{
Присваивает одному из показателей комбинаторной модели флаг использования его в качестве
  ограниченного ресурса. В комбинаторной модели при расчёте может быть один или несколько
  целевых ресурсов.
}
\section{Methods (by class)}{
\itemize{
\item \code{model = Combinatorics,parameter = character,value = numeric}: поиск показателя по наименованию и установка его как
ограниченного ресурса, с указанием лимита ограниченного ресурса

\item \code{model = Combinatorics,parameter = numeric,value = numeric}: поиск показателя по индексу в списке показателей и
установка его как ограниченного ресурса, с указанием лимита ограниченного ресурса
}}

\note{
При наличии более одного ограниченного ресурса поиск оптимума автоматически производится с
  применением следующего утверждения: \emph{решение, оптимальное по одному ограниченному ресурсу
  (называемому, исходным) и допустимое по остальным, является оптимальным по всем ресурсным
  ограничениям}. При этом выбирается то из оптимальных по исходному ограниченному ресурсу
  решений, которое удовлетворяет всем ресурсным ограничениям и требует затрат хотя бы одного
  из ограниченных ресурсов  в максимально возмоэной степени (этот ресурс называется наиболее
  дефицитным).

  \strong{Примечание:} Если исходный ограниченный ресурс и наиболее дефицитный ограниченный ресурс не
  совпадают, то возможны, ситуации, когда описанный алгоритм игнорирует строго оптимальное
  решение, а выбирает  решение  близкое к оптимальному.  При этом  необходим  дальнейший
  поиск  в  предположении, что  наиболее дефицитный ресурс выбирается в качестве исходного
  ограниченного ресурса. В этом   случае    процесс   оптимизации   становится  многоэтапным.
  Многоэтапный  поиск  производится атоматически.
}
\examples{

  model <- combinatorics.example.Model3()
  combinatorics.set.limit (model, 'R1', 100)

  model <- combinatorics.example.Model3()
  combinatorics.set.limit (model, 4, 100)
}
